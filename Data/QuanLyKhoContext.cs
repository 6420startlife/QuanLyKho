// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using QuanLyKho.Models;

namespace QuanLyKho.Data
{
    public partial class QuanLyKhoContext : DbContext
    {
        public QuanLyKhoContext()
        {
        }

        public QuanLyKhoContext(DbContextOptions<QuanLyKhoContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ChiTietPhieuNhap> ChiTietPhieuNhap { get; set; }
        public virtual DbSet<Kho> Kho { get; set; }
        public virtual DbSet<PhieuNhap> PhieuNhap { get; set; }
        public virtual DbSet<VatTu> VatTu { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ChiTietPhieuNhap>(entity =>
            {
                entity.HasKey(e => new { e.soPhieu, e.maVatTu });

                entity.Property(e => e.soPhieu).HasColumnName("soPhieu");

                entity.Property(e => e.maVatTu)
                    .HasMaxLength(10)
                    .HasColumnName("maVatTu");

                

                entity.Property(e => e.soLuong).HasColumnName("soLuong");

                entity.HasOne(d => d.vatTuNavigation)
                    .WithMany(p => p.list_chiTietPhieuNhap)
                    .HasForeignKey(d => d.maVatTu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ChiTietPhieuNhap_VatTu");

                entity.HasOne(d => d.phieuNhapNavigation)
                    .WithMany(p => p.list_chiTietPhieuNhap)
                    .HasForeignKey(d => d.soPhieu)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK_ChiTietPhieuNhap_PhieuNhap");
            });

            modelBuilder.Entity<Kho>(entity =>
            {
                entity.HasKey(e => e.maKho);

                entity.Property(e => e.maKho)
                    .HasMaxLength(10)
                    .HasColumnName("maKho");

                entity.Property(e => e.tenKho)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tenKho");
            });

            modelBuilder.Entity<PhieuNhap>(entity =>
            {
                entity.HasKey(e => e.soPhieu);

                entity.Property(e => e.soPhieu)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("soPhieu");

                entity.Property(e => e.maKho)
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnName("maKho");

                entity.Property(e => e.ngayLap)
                    .HasColumnType("date")
                    .HasColumnName("ngayLap");

                entity.HasOne(d => d.khoNavigation)
                    .WithMany(p => p.list_phieuNhap)
                    .HasForeignKey(d => d.maKho)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PhieuNhap_Kho");
            });

            modelBuilder.Entity<VatTu>(entity =>
            {
                entity.HasKey(e => e.maVatTu);

                entity.Property(e => e.maVatTu)
                    .HasMaxLength(10)
                    .HasColumnName("maVatTu");

                entity.Property(e => e.tenVatTu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("tenVatTu");

                entity.Property(e => e.xuatXu)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("xuatXu");

                entity.Property(e => e.donViTinh)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("donViTinh");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}